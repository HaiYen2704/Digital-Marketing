{"ast":null,"code":"var _jsxFileName = \"/Users/haiyenhaiyen/Documents/Project/digital-marketing/src/components/sections/recruit/entry/EntryForm.js\";\nimport React from \"react\";\nimport \"./EntryForm.css\";\nimport { useTranslation } from \"react-i18next\";\nimport entryValidatation from \"./EntryValidatation\";\nimport validate from \"./ValidateInfo\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { useParams } from \"react-router-dom\";\nexport default function EntryForm({\n  data\n}) {\n  const {\n    t\n  } = useTranslation();\n  const {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  } = entryValidatation(EntryForm, validate, t);\n  let {\n    job\n  } = useParams();\n\n  function displayError(errors, field) {\n    let error_txt = \"\";\n\n    switch (field) {\n      case \"entry__name\":\n        error_txt = errors.entry__name;\n        break;\n\n      case \"entry__mail\":\n        error_txt = errors.entry__mail;\n        break;\n\n      case \"entry__furigana\":\n        error_txt = errors.entry__furigana;\n        break;\n\n      case \"entry__date\":\n        error_txt = errors.entry__date;\n        break;\n\n      case \"entry__phone\":\n        error_txt = errors.entry__phone;\n        break;\n\n      case \"entry__current_job\":\n        error_txt = errors.entry__current_job;\n        break;\n\n      case \"entry__gender\":\n        error_txt = errors.entry__gender;\n        break;\n    }\n\n    return error_txt;\n  }\n\n  function setClassRequired(is_required) {\n    if (is_required === \"entry__required\") {\n      return \"entry__rect_required\";\n    } else {\n      return \"entry__rect_optional\";\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"entry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"entry__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, t(data.title)), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    name: \"entry\",\n    action: data.action,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, data.items.map((item, index) => {\n    switch (item.type) {\n      case \"textarea\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__row_area\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }\n        }, t(item.label), /*#__PURE__*/React.createElement(\"rect\", {\n          className: setClassRequired(item.is_required),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 23\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"textarea\", {\n          className: \"entry__field\",\n          key: index,\n          name: item.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }\n        })));\n\n      case \"select\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }\n        }, t(item.label), /*#__PURE__*/React.createElement(\"rect\", {\n          className: setClassRequired(item.is_required),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 23\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"select\", {\n          className: \"entry__field\",\n          name: item.name,\n          value: t(\"entry__\" + job),\n          readonly: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }\n        }, item.option.map((option, index) => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: t(option),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 32\n            }\n          }, t(option));\n        }))));\n\n      case \"radio\"\n      /*duyet mang*/\n      :\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }\n        }, t(item.label), /*#__PURE__*/React.createElement(\"rect\", {\n          className: setClassRequired(item.is_required),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 23\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__field\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(RadioGroup, {\n          row: true,\n          \"aria-label\": \"position\",\n          name: item.name,\n          onChange: e => handleChange(item.placeholder, e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 23\n          }\n        }, item.choices.map((choice, index) => {\n          return [/*#__PURE__*/React.createElement(FormControlLabel, {\n            value: t(choice),\n            control: /*#__PURE__*/React.createElement(Radio, {\n              color: \"primary\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 40\n              }\n            }),\n            label: /*#__PURE__*/React.createElement(\"div\", {\n              className: \"entry__radio\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 38\n              }\n            }, t(choice)),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }\n          })];\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }\n        }, t(displayError(errors, item.placeholder)))));\n\n      default:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }\n        }, t(item.label), /*#__PURE__*/React.createElement(\"rect\", {\n          className: setClassRequired(item.is_required),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 23\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          className: \"entry__field\",\n          key: index,\n          type: item.type,\n          name: item.name,\n          placeholder: t(item.placeholder),\n          onChange: e => handleChange(item.placeholder, e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }\n        }, t(displayError(errors, item.placeholder)))));\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: t(data.submit),\n    className: \"entry__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/haiyenhaiyen/Documents/Project/digital-marketing/src/components/sections/recruit/entry/EntryForm.js"],"names":["React","useTranslation","entryValidatation","validate","Radio","RadioGroup","FormControlLabel","useParams","EntryForm","data","t","handleChange","handleSubmit","values","errors","job","displayError","field","error_txt","entry__name","entry__mail","entry__furigana","entry__date","entry__phone","entry__current_job","entry__gender","setClassRequired","is_required","title","action","items","map","item","index","type","label","name","option","e","placeholder","choices","choice","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./EntryForm.css\";\nimport { useTranslation } from \"react-i18next\";\nimport entryValidatation from \"./EntryValidatation\";\nimport validate from \"./ValidateInfo\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport {useParams} from \"react-router-dom\";\n\nexport default function EntryForm({ data }) {\n  const { t } = useTranslation();\n\n  const { handleChange, handleSubmit, values, errors } = entryValidatation(\n    EntryForm,\n    validate,\n    t\n  );\n\n  let {job} = useParams() ;\n\n  function displayError(errors, field) {\n    let error_txt = \"\";\n    switch (field) {\n      case \"entry__name\":\n        error_txt = errors.entry__name;\n        break;\n      case \"entry__mail\":\n        error_txt = errors.entry__mail;\n        break;\n      case \"entry__furigana\":\n        error_txt = errors.entry__furigana;\n        break;\n      case \"entry__date\":\n        error_txt = errors.entry__date;\n        break;\n      case \"entry__phone\":\n        error_txt = errors.entry__phone;\n        break;\n      case \"entry__current_job\":\n        error_txt = errors.entry__current_job;\n        break;\n      case \"entry__gender\":\n        error_txt = errors.entry__gender;\n        break;\n    }\n    return error_txt;\n  }\n\n  function setClassRequired(is_required) {\n    if (is_required === \"entry__required\") {\n      return \"entry__rect_required\";\n    } else {\n      return \"entry__rect_optional\";\n    }\n  }\n\n  return (\n    <section className=\"entry\">\n      <h3 className=\"entry__title\">{t(data.title)}</h3>\n      <form className=\"form\" name=\"entry\" action={data.action} onSubmit={handleSubmit}>\n        {data.items.map((item, index) => {\n          switch (item.type) {\n            case \"textarea\":\n              return (\n                <div className=\"entry__row_area\">\n                  <div className=\"entry__label\">\n                    <label className=\"\">\n                      {t(item.label)}\n                      <rect className={setClassRequired(item.is_required)} />\n                    </label>\n                  </div>\n                  <div className=\"entry__item\">\n                    <textarea\n                      className=\"entry__field\"\n                      key={index}\n                      name={item.name}\n                    />\n                  </div>\n                </div>\n              );\n            case \"select\":\n              return (\n                <div className=\"entry__row\">\n                  <div className=\"entry__label\">\n                    <label className=\"\">\n                      {t(item.label)}\n                      <rect className={setClassRequired(item.is_required)} />\n                    </label>\n                  </div>\n                  <div className=\"entry__item\">\n                  <select className=\"entry__field\" name={item.name} value={t(\"entry__\" + job)} readonly>\n                      {item.option.map((option, index) => {\n                        return <option value={t(option)}>{t(option)}</option>;\n                      })}\n                    </select>\n                  </div>\n                </div>\n              );\n            case \"radio\" /*duyet mang*/:\n              return (\n                <div className=\"entry__row\">\n                  <div className=\"entry__label\">\n                    <label className=\"\">\n                      {t(item.label)}\n                      <rect className={setClassRequired(item.is_required)} />\n                    </label>\n                  </div>\n                  <div className=\"entry__item\">\n                    <div className=\"entry__field\">\n                      <RadioGroup row aria-label=\"position\" name={item.name}\n                      onChange={(e) => handleChange(item.placeholder, e)}>\n                        {item.choices.map((choice, index) => {\n                          return [\n                            <FormControlLabel\n                              value={t(choice)}\n                              control={<Radio color=\"primary\" />}\n                              label={<div className=\"entry__radio\">{t(choice)}</div>}\n                            />,\n                          ];\n                        })}\n                      </RadioGroup>\n                    </div>\n                    <div className=\"entry__error\">\n                      {t(displayError(errors, item.placeholder))}\n                    </div>\n                  </div>\n                </div>\n              );\n\n            default:\n              return (\n                <div className=\"entry__row\">\n                  <div className=\"entry__label\">\n                    <label className=\"\">\n                      {t(item.label)}\n                      <rect className={setClassRequired(item.is_required)} />\n                    </label>\n                  </div>\n                  <div className=\"entry__item\">\n                    <input\n                      className=\"entry__field\"\n                      key={index}\n                      type={item.type}\n                      name={item.name}\n                      placeholder={t(item.placeholder)}\n                      onChange={(e) => handleChange(item.placeholder, e)}\n                    />\n                    <div className=\"entry__error\">\n                      {t(displayError(errors, item.placeholder))}\n                    </div>\n                  </div>\n                </div>\n              );\n          }\n        })}\n        <input type=\"submit\" value={t(data.submit)} className=\"entry__btn\" />\n      </form>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}