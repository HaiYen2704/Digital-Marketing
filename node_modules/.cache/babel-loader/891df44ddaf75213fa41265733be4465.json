{"ast":null,"code":"var _jsxFileName = \"/Users/haiyenhaiyen/Documents/Project/digital-marketing/src/components/sections/recruit/entry/EntryForm.js\";\nimport React from \"react\";\nimport \"./EntryForm.css\";\nimport { useTranslation } from \"react-i18next\";\nimport entryValidatation from \"./EntryValidatation\";\nimport validate from \"./ValidateInfo\";\nexport default function EntryForm({\n  data,\n  location\n}) {\n  const {\n    t\n  } = useTranslation();\n  const {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  } = entryValidatation(EntryForm, validate, t);\n  var job = location.pathname.split(\"/\")[location.pathname.split(\"/\").length - 2];\n\n  function findJob(job) {\n    let jobList = [\"director\", \"designer\", \"frontend\", \"backend\", \"new-graduate\"];\n    let result = false;\n    jobList.map((item, index) => {\n      if (job === item) {\n        result = true;\n      }\n    });\n    return result;\n  }\n\n  function displayError(errors, field) {\n    let error_txt = \"\";\n\n    switch (field) {\n      case \"entry__name\":\n        error_txt = errors.entry__name;\n        break;\n\n      case \"entry__mail\":\n        error_txt = errors.entry__mail;\n        break;\n\n      case \"entry__furigana\":\n        error_txt = errors.entry__furigana;\n        break;\n\n      case \"entry__date\":\n        error_txt = errors.entry__date;\n        break;\n\n      case \"entry__phone\":\n        error_txt = errors.entry__phone;\n        break;\n\n      case \"entry__current_job\":\n        error_txt = errors.entry__current_job;\n        break;\n\n      case \"entry__gender\":\n        error_txt = errors.entry__gender;\n        break;\n\n      default:\n        break;\n    }\n\n    return error_txt;\n  }\n\n  function setClassRequired(is_required) {\n    if (is_required === \"entry__required\") {\n      return \"entry__rect_required\";\n    } else {\n      return \"entry__rect_optional\";\n    }\n  }\n\n  function getGender(gender) {\n    if (gender === \"entry__male\") {\n      return \"男性\";\n    } else {\n      return \"女性\";\n    }\n  }\n\n  return !findJob(job) ? findJob(job) : /*#__PURE__*/React.createElement(\"section\", {\n    className: \"entry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"entry__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, t(data.title)), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    name: \"entry\",\n    action: data.action,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, data.items.map((item, index) => {\n    switch (item.type) {\n      case \"textarea\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__row_area\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 23\n          }\n        }, t(item.label), /*#__PURE__*/React.createElement(\"rect\", {\n          className: setClassRequired(item.is_required),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"textarea\", {\n          className: \"entry__field\",\n          key: index,\n          name: item.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 23\n          }\n        })));\n\n      case \"select\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 23\n          }\n        }, t(item.label), /*#__PURE__*/React.createElement(\"rect\", {\n          className: setClassRequired(item.is_required),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"select\", {\n          className: \"entry__field\",\n          name: item.name,\n          value: t(\"entry__\" + job),\n          readonly: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 23\n          }\n        }, item.option.map((option, index) => {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: t(option),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 34\n            }\n          }, t(option));\n        }))));\n\n      case \"radio\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 23\n          }\n        }, t(item.label), /*#__PURE__*/React.createElement(\"rect\", {\n          className: setClassRequired(item.is_required),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__field\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 23\n          }\n        }, item.choices.map((choice, index) => {\n          return [/*#__PURE__*/React.createElement(\"input\", {\n            type: \"radio\",\n            name: item.name,\n            value: t(choice),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(\"label\", {\n            for: t(choice),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }\n          }, t(choice)), \"  \"];\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 23\n          }\n        }, t(displayError(errors, item.placeholder)))));\n\n      default:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 23\n          }\n        }, t(item.label), /*#__PURE__*/React.createElement(\"rect\", {\n          className: setClassRequired(item.is_required),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          className: \"entry__field\",\n          key: index,\n          type: item.type,\n          name: item.name,\n          placeholder: t(item.placeholder),\n          onChange: e => handleChange(item.placeholder, e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 23\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"entry__error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 23\n          }\n        }, t(displayError(errors, item.placeholder)))));\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: t(data.submit),\n    className: \"entry__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/haiyenhaiyen/Documents/Project/digital-marketing/src/components/sections/recruit/entry/EntryForm.js"],"names":["React","useTranslation","entryValidatation","validate","EntryForm","data","location","t","handleChange","handleSubmit","values","errors","job","pathname","split","length","findJob","jobList","result","map","item","index","displayError","field","error_txt","entry__name","entry__mail","entry__furigana","entry__date","entry__phone","entry__current_job","entry__gender","setClassRequired","is_required","getGender","gender","title","action","items","type","label","name","option","choices","choice","placeholder","e","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./EntryForm.css\";\nimport { useTranslation } from \"react-i18next\";\nimport entryValidatation from \"./EntryValidatation\";\nimport validate from \"./ValidateInfo\";\n\nexport default function EntryForm({ data, location }) {\n  const { t } = useTranslation();\n\n  const { handleChange, handleSubmit, values, errors } = entryValidatation(\n    EntryForm,\n    validate,\n    t\n  );\n\n  var job = location.pathname.split(\"/\")[location.pathname.split(\"/\").length - 2];\n\n  function findJob(job) {\n    let jobList = [\n      \"director\",\n      \"designer\",\n      \"frontend\",\n      \"backend\",\n      \"new-graduate\",\n    ];\n    let result = false;\n    jobList.map((item, index) => {\n      if (job === item) {\n        result = true;\n      }\n    });\n    return result;\n  }\n\n  function displayError(errors, field) {\n    let error_txt = \"\";\n    switch (field) {\n      case \"entry__name\":\n        error_txt = errors.entry__name;\n        break;\n      case \"entry__mail\":\n        error_txt = errors.entry__mail;\n        break;\n      case \"entry__furigana\":\n        error_txt = errors.entry__furigana;\n        break;\n      case \"entry__date\":\n        error_txt = errors.entry__date;\n        break;\n      case \"entry__phone\":\n        error_txt = errors.entry__phone;\n        break;\n      case \"entry__current_job\":\n        error_txt = errors.entry__current_job;\n        break;\n      case \"entry__gender\":\n        error_txt = errors.entry__gender;\n        break;\n      default:\n        break;\n    }\n    return error_txt;\n  }\n\n  function setClassRequired(is_required) {\n    if (is_required === \"entry__required\") {\n      return \"entry__rect_required\";\n    } else {\n      return \"entry__rect_optional\";\n    }\n  }\n\n  function getGender(gender) {\n    if (gender === \"entry__male\") {\n      return \"男性\";\n    } else {\n      return \"女性\";\n    }\n  }\n\n  return !findJob(job) ? (\n    findJob(job)\n  ) : (\n      <section className=\"entry\">\n        <h3 className=\"entry__title\">{t(data.title)}</h3>\n        <form\n          className=\"form\"\n          name=\"entry\"\n          action={data.action}\n          onSubmit={handleSubmit}\n        >\n          {data.items.map((item, index) => {\n            switch (item.type) {\n              case \"textarea\":\n                return (\n                  <div className=\"entry__row_area\">\n                    <div className=\"entry__label\">\n                      <label className=\"\">\n                        {t(item.label)}\n                        <rect className={setClassRequired(item.is_required)} />\n                      </label>\n                    </div>\n                    <div className=\"entry__item\">\n                      <textarea\n                        className=\"entry__field\"\n                        key={index}\n                        name={item.name}\n                      />\n                    </div>\n                  </div>\n                );\n              case \"select\":\n                return (\n                  <div className=\"entry__row\">\n                    <div className=\"entry__label\">\n                      <label className=\"\">\n                        {t(item.label)}\n                        <rect className={setClassRequired(item.is_required)} />\n                      </label>\n                    </div>\n                    <div className=\"entry__item\">\n                      <select\n                        className=\"entry__field\"\n                        name={item.name}\n                        value={t(\"entry__\" + job)}\n                        readonly\n                      >\n                        {item.option.map((option, index) => {\n                          return <option value={t(option)}>{t(option)}</option>;\n                        })}\n                      </select>\n                    </div>\n                  </div>\n                );\n              case \"radio\":\n                return (\n                  <div className=\"entry__row\">\n                    <div className=\"entry__label\">\n                      <label className=\"\">\n                        {t(item.label)}\n                        <rect className={setClassRequired(item.is_required)} />\n                      </label>\n                    </div>\n                    <div className=\"entry__item\">\n                      <div className=\"entry__field\">\n                        {item.choices.map((choice, index) => {\n                          return [\n                            <input\n                              type=\"radio\"\n                              name={item.name}\n                              value={t(choice)}\n                            />,\n                            <label for={t(choice)}>{t(choice)}</label>,\n                            \"  \",\n                          ];\n                        })}\n                      </div>\n                      <div className=\"entry__error\">\n                        {t(displayError(errors, item.placeholder))}\n                      </div>\n                    </div>\n                  </div>\n                );\n\n              default:\n                return (\n                  <div className=\"entry__row\">\n                    <div className=\"entry__label\">\n                      <label className=\"\">\n                        {t(item.label)}\n                        <rect className={setClassRequired(item.is_required)} />\n                      </label>\n                    </div>\n                    <div className=\"entry__item\">\n                      <input\n                        className=\"entry__field\"\n                        key={index}\n                        type={item.type}\n                        name={item.name}\n                        placeholder={t(item.placeholder)}\n                        onChange={(e) => handleChange(item.placeholder, e)}\n                      />\n                      <div className=\"entry__error\">\n                        {t(displayError(errors, item.placeholder))}\n                      </div>\n                    </div>\n                  </div>\n                );\n            }\n          })}\n          <input type=\"submit\" value={t(data.submit)} className=\"entry__btn\" />\n        </form>\n      </section>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}